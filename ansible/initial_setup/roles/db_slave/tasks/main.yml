---
- name: Stop PostgreSQL service before config & sync
  service: name=postgresql state=stopped
  sudo_user: root
  sudo: yes

- name: Delete current PostgreSQL slave folder
  file: path=/var/lib/postgresql/9.4/main state=absent

- name: accept connections from LB1
  lineinfile: dest=/etc/postgresql/9.4/main/pg_hba.conf
              line="host    django_db     django_user      192.168.154.2/32            md5"

- name: accept connections from LB2
  lineinfile: dest=/etc/postgresql/9.4/main/pg_hba.conf
              line="host    django_db     django_user      192.168.154.3/32            md5"

- name: Sync master and slave databases
  shell: PGPASSWORD={{rep_pswd}} pg_basebackup -h 192.168.154.6 -D /var/lib/postgresql/9.4/main -U {{rep_user}} --xlog-method=stream

- name: Enable hot standby in PostgreSQL configuration
  lineinfile: dest=/etc/postgresql/9.4/main/postgresql.conf
              regexp="^hot_standby ="
              line="hot_standby = on"

- name: Copy recovery template to PostgreSQL config
  command: creates="/var/lib/postgresql/9.4/main/recovery.conf" cp /usr/share/postgresql/9.4/recovery.conf.sample /var/lib/postgresql/9.4/main/recovery.conf

- name: Enable standby mode in PostgreSQL recovery configuration
  lineinfile: dest=/var/lib/postgresql/9.4/main/recovery.conf
              regexp="^standby_mode ="
              line="standby_mode = on"

- name: Enable connection to master server
  lineinfile: dest=/var/lib/postgresql/9.4/main/recovery.conf
              regexp="^primary_conninfo = 'host="
              line="primary_conninfo = 'host=192.168.154.6 port=5432 user={{rep_user}} password={{rep_pswd}}'"

- name: Set trigger file location
  lineinfile: dest=/var/lib/postgresql/9.4/main/recovery.conf
              regexp="^trigger_file = '"
              line="trigger_file = '/tmp/postgresql.trigger.5432'"

- name: Restart PostgreSQL service
  service: name=postgresql state=started
  sudo_user: root
  sudo: yes

- name: Pg_dump directories
  tags: db_backup
  sudo: yes
  sudo_user: root
  with_items: pg_dump_dirs
  file: >
    state=directory
    path={{item.dir}}
    owner={{item.owner}}
    group={{item.group}}
    mode={{item.mode}}

- name: Pg backup cron files
  tags: db_backup
  with_items: pg_dumps_scripts
  copy: >
    src={{item.srcd}}/{{item.name}}
    dest={{item.destd}}/{{item.name}}
    owner={{item.owner}}
    group={{item.group}}
    mode={{item.mode}}

# //!\\ Bugged when cron:name changes with_items OR contains spaces.
- name: Pg backup cronjob
  tags: db_backup
  cron: >
    name='Pg_dump'
    state=present
    user=postgres
    hour=2
    minute=30
    job='{{pg_cron_dump_script}}'

- name: Pg backup rotation cronjob
  tags: db_backup
  cron: >
    name='Pg_dump-rotate'
    state=present
    user=postgres
    hour=4
    minute=15
    job='{{pg_cron_logrotate_script}} {{pg_cron_logrotate_conf}}'

...
