---
- name: Install necessary packages
  apt: name="{{item}}" state=present
  with_items:
    - python-dev
    - python-openssl
    - python3-pip
    - python3-venv
    - python-ldap
    - python-ldap3

- name: create buildbot group
  group: name=buildbot state=present

- name: create buildbot user
  user: name=buildbot group=buildbot shell=/bin/bash

- name: git server's key for known_hosts
  command: ssh-keyscan -t rsa git.slash16.local
  register: git_key

- name: Gogs is in known_hosts
  sudo: yes
  sudo_user: buildbot
  lineinfile: dest=/home/buildbot/.ssh/known_hosts create=yes line="{{git_key.stdout}}"

- name: Install buildbot
  pip: name="{{item}}" state=present
  with_items:
    - buildbot
    - buildbot-worker
    - buildbot_www
    - buildbot_waterfall_view
    - buildbot-console-view
    - service_identity

- name: Create ci folder
  file: state=directory path=/home/buildbot/ci group=buildbot owner=buildbot

- name: Buildbot master exists
  stat: path=/home/buildbot/ci/master/buildbot.tac
  register: master_try

- name: Create a master
  sudo: yes
  sudo_user: buildbot
  command: buildbot create-master master chdir=/home/buildbot/ci
  when: master_try.stat.exists == False

#- name: Buildbot worker exists
#  stat: path=/home/buildbot/ci/worker/buildbot.tac
#  register: worker_try
#
#- name: Create a worker
#  sudo: yes
#  sudo_user: buildbot
#  command: buildbot-worker create-worker worker 127.0.0.1:9989 example-worker pass chdir=/home/buildbot/ci
#  when: worker_try.stat.exists == False

- name: Buildbot master config
  copy: src=master.cfg dest=/home/buildbot/ci/master/master.cfg group=buildbot owner=buildbot
  notify:
    - restart buildbot
    #- restart buildbot worker

- name: buildbot master service
  copy: src=buildbot.service dest=/etc/systemd/system/buildbot.service
  notify:
    - reload systemd

#- name: buildbot worker service
#  copy: src=buildbot-worker.service dest=/etc/systemd/system/buildbot-worker.service
#  notify:
#    - reload systemd


- name: install buildbot logger daemon
  copy: src=buildbot-logger.service
        dest=/etc/systemd/system/buildbot-logger.service
  notify:
    - reload systemd

- name: install buildbot logger script
  sudo: yes
  sudo_user: buildbot
  copy: src=buildbot-logger.sh
        dest=/home/buildbot/ci/buildbot-logger.sh
  notify:
    - restart buildbot-logger

# NGINX #
#########
- name: nginx site conf
  copy: src=buildbot-nginx dest=/etc/nginx/sites-available/buildbot
  notify:
    - restart nginx

- name: enable nginx site conf
  file: >
    dest=/etc/nginx/sites-enabled/buildbot
    src=/etc/nginx/sites-available/buildbot
    state=link
  notify:
    - restart nginx

# Nginx auth
- name: create nginx-ldap-auth group
  group: name=nginx-ldap-auth state=present

- name: create nginx-ldap-auth user
  user: name=nginx-ldap-auth group=nginx-ldap-auth shell=/bin/bash

- name: Get nginx-ldap-auth
  sudo: yes
  sudo_user: nginx-ldap-auth
  git: repo=https://github.com/supermaciz/nginx-ldap-auth.git
       dest=/home/nginx-ldap-auth/nginx-ldap depth=1

- name: nginx-ldap-auth conf
  copy: src=nginx-ldap-auth.conf dest=/etc/nginx/conf.d/nginx-ldap-auth.conf
  notify:
    - restart nginx

- name: install nginx-ldap-auth daemon
  copy: src=nginx-ldap-auth.service dest=/etc/systemd/system/nginx-ldap-auth.service
  notify:
    - reload systemd

- name: install web backend daemon for nginx-ldap
  copy: src=backend-ldap-daemon.service
        dest=/etc/systemd/system/backend-ldap-daemon.service
  notify:
    - reload systemd

# DATABASE CONF
###############
- name: Set db_read alias in /etc/hosts
  lineinfile: dest=/etc/hosts
              line="127.0.0.1  db_read"

- name: Set db_write alias in /etc/hosts
  lineinfile: dest=/etc/hosts
              line="127.0.0.1  db_write"

- name: Create Django database user
  postgresql_user: name=django_user password=django_user
                   role_attr_flags=CREATEDB
  sudo_user: postgres
  sudo: yes


# Start the daemons #
# ################# #
- name: Buildbot is started
  service: name=buildbot state=started

#- name: Buildbot worker is started
#  service: name=buildbot-worker state=started

- name: Start buildbot logger daemon
  service: name=buildbot-logger state=started

- name: nginx-ldap-auth is started
  service: name=nginx-ldap-auth state=started

- name: backend-ldap-daemon is started
  service: name=backend-ldap-daemon state=started

...
