---
- name: Install necessary packages
  apt: name="{{item}}" state=present
  with_items:
    - python-dev
    - python-openssl
    - python-psycopg2
    - python3-pip
    - python3-venv
    - python-ldap
    - python-ldap3

- name: create buildbot group
  group: name=buildbot state=present

- name: create buildbot user
  user: name=buildbot group=buildbot shell=/bin/bash

- name: git server's key for known_hosts
  command: ssh-keyscan -t rsa git.slash16.local
  register: git_key

- name: Gogs is in known_hosts
  sudo: yes
  sudo_user: buildbot
  lineinfile: dest=/home/buildbot/.ssh/known_hosts create=yes line="{{git_key.stdout}}"

- name: Install buildbot
  pip: name="{{item}}" state=present
  with_items:
    - buildbot==0.9.1
    - buildbot-worker==0.9.1
    - buildbot_www==0.9.1
    - buildbot-waterfall-view==0.9.1
    - buildbot-console-view==0.9.1
    - service_identity

- name: Create ci folder
  file: state=directory path=/home/buildbot/ci group=buildbot owner=buildbot

- name: Buildbot master exists
  stat: path=/home/buildbot/ci/master/buildbot.tac
  register: master_try

- name: Create a master
  sudo: yes
  sudo_user: buildbot
  command: buildbot create-master master chdir=/home/buildbot/ci
  when: master_try.stat.exists == False

- name: Buildbot master config
  copy: src=master.cfg dest=/home/buildbot/ci/master/master.cfg group=buildbot owner=buildbot
  notify:
    - stop buildbot
    - upgrade buildbot master
    - start buildbot

- name: buildbot master service
  copy: src=buildbot.service dest=/etc/systemd/system/buildbot.service
  notify:
    - reload systemd


- name: install buildbot logger daemon
  copy: src=buildbot-logger.service
        dest=/etc/systemd/system/buildbot-logger.service
  notify:
    - reload systemd

- name: install buildbot logger script
  sudo: yes
  sudo_user: buildbot
  copy: src=buildbot-logger.sh
        dest=/home/buildbot/ci/buildbot-logger.sh
  notify:
    - restart buildbot-logger

# NGINX #
#########
- name: nginx site conf
  copy: src=buildbot-nginx dest=/etc/nginx/sites-available/buildbot
  notify:
    - restart nginx

- name: enable nginx site conf
  file: >
    dest=/etc/nginx/sites-enabled/buildbot
    src=/etc/nginx/sites-available/buildbot
    state=link
  notify:
    - restart nginx

# Nginx auth
- name: create nginx-ldap-auth group
  group: name=nginx-ldap-auth state=present

- name: create nginx-ldap-auth user
  user: name=nginx-ldap-auth group=nginx-ldap-auth shell=/bin/bash

- name: Get nginx-ldap-auth
  sudo: yes
  sudo_user: nginx-ldap-auth
  git: repo=https://github.com/supermaciz/nginx-ldap-auth.git
       dest=/home/nginx-ldap-auth/nginx-ldap depth=1

- name: nginx-ldap-auth conf
  copy: src=nginx-ldap-auth.conf dest=/etc/nginx/conf.d/nginx-ldap-auth.conf
  notify:
    - restart nginx

- name: install nginx-ldap-auth daemon
  copy: src=nginx-ldap-auth.service dest=/etc/systemd/system/nginx-ldap-auth.service
  notify:
    - reload systemd

- name: install web backend daemon for nginx-ldap
  copy: src=backend-ldap-daemon.service
        dest=/etc/systemd/system/backend-ldap-daemon.service
  notify:
    - reload systemd

###############
# CI's worker #
###############
- name: Install buildbot
  delegate_to: 192.168.154.10
  pip: name="{{item}}" state=present
  with_items:
    - buildbot==0.9.1
    - buildbot-worker==0.9.1

- name: Create ci folder (preprod worker)
  delegate_to: 192.168.154.10
  file: state=directory path=/home/django/ci group=django owner=django

- name: Buildbot worker exists (preprod worker)
  delegate_to: 192.168.154.10
  stat: path=/home/django/ci/worker/buildbot.tac
  register: worker_try

- name: Create a worker (preprod worker)
  delegate_to: 192.168.154.10
  sudo: yes
  sudo_user: django
  command: buildbot-worker create-worker worker ci.slash16.local:9989 preprod-worker pass chdir=/home/django/ci
  when: worker_try.stat.exists == False

- name: buildbot worker service
  delegate_to: 192.168.154.10
  copy: src=buildbot-worker.service dest=/etc/systemd/system/buildbot-worker.service
  notify:
    - reload systemd worker
    - restart buildbot-worker preprod

- name: Create webapp test database (preprod)
  delegate_to: 192.168.154.10
  sudo_user: postgres
  sudo: yes
  postgresql_db: name=test_django_db encoding=utf8
                 template=template0
 
- name: Create Django database user
  delegate_to: 192.168.154.10
  postgresql_user: name=django_user password=django_user
                   role_attr_flags=CREATEDB
                   db=test_django_db priv=ALL
  sudo_user: postgres
  sudo: yes

#- name: Gogs is in known_hosts
#  delegate_to: 192.168.154.10
#  lineinfile: dest=/root/.ssh/known_hosts create=yes line="{{git_key.stdout}}"

# DATABASE CONF
###############
- name: Create buildbot database
  sudo_user: postgres
  sudo: yes
  postgresql_db: name=buildbot_db encoding=utf8
                 template=template0
  notify:
    - stop buildbot
    - upgrade buildbot master
    - start buildbot
    - restart buildbot-worker preprod

- name: Create buildbot user in postgres
  sudo_user: postgres
  sudo: yes
  postgresql_user: name=buildbot password=buildbot
                   db=buildbot_db priv=ALL
  notify:
    - stop buildbot
    - upgrade buildbot master
    - start buildbot
    - restart buildbot-worker preprod

# Start the daemons #
# ################# #
#- name: Buildbot is started
#  service: name=buildbot state=started

- name: Start buildbot logger daemon
  service: name=buildbot-logger state=started

- name: nginx-ldap-auth is started
  service: name=nginx-ldap-auth state=started

- name: backend-ldap-daemon is started
  service: name=backend-ldap-daemon state=started


# Database backup #
###################
- name: Pg_dump directories
  tags: db_backup
  with_items: pg_dump_dirs
  file: >
    state=directory
    path={{item.dir}}
    owner={{item.owner}}
    group={{item.group}}
    mode={{item.mode}}

- name: Pg backup cron files
  tags: db_backup
  with_items: pg_dump_scripts
  copy: >
    src={{item.srcd}}/{{item.name}}
    dest={{item.destd}}/{{item.name}}
    owner={{item.owner}}
    group={{item.group}}
    mode={{item.mode}}

# //!\\ Bugged when cron:name changes with_items OR contains spaces.
- name: Pg backup cronjob
  tags: db_backup
  cron: >
    name='Pg_dump buildbot'
    state=present
    user=postgres
    hour=2
    minute=3
    job='{{pg_cron_dump_script}}'

- name: Pg backup rotation cronjob
  tags: db_backup
  cron: >
    name='Pg_dump-rotate buildbot'
    state=present
    user=postgres
    hour=2
    minute=12
    job='{{pg_cron_logrotate_script}} {{pg_cron_logrotate_conf}}'

...
