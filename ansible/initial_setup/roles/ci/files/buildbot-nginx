#server {
#  listen 8083 default_server;
#  server_name _;
#  #return 302 http://google.fr;
#  return 302 https://10.17.1.154:4433$request_uri;
#}
upstream backend {
  server 127.0.0.1:9000;
}

server {
  listen 4433 ssl http2;
  server_name ci.slash16.local;
#server_name git.slash16.local;

  ssl_certificate /etc/ssl/certs/cert.pem;
  ssl_certificate_key /etc/ssl/private/cert.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5;

  ssl_session_cache shared:SSL:144m;
  ssl_session_timeout 144m;

  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  spdy_headers_comp 5;

  underscores_in_headers on;

  location / {
    auth_request /auth-proxy;
    auth_request_set $user $upstream_http_username;
    proxy_set_header remote_user $user;
#add_header remote_user "Maximilien";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_pass_request_headers on;
#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#proxy_set_header Host $http_host;
    error_page 401 =200 /login;
    proxy_pass http://127.0.0.1:8010;
  }

  location /login {
    proxy_pass http://backend/login;
# Login service returns a redirect to the original URI
# and sets the cookie for the ldap-auth daemon
    proxy_set_header X-Target $request_uri;
  }

  location = /auth-proxy {
    internal;

# The ldap-auth daemon listens on port 8888, as set
# in nginx-ldap-auth-daemon.py.
# Change the IP address if the daemon is not running on
# the same host as NGINX/NGINX Plus.
    proxy_pass http://127.0.0.1:8888;

    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
#proxy_cache auth_cache;
#proxy_cache_valid 200 10m;

# The following directive adds the cookie to the cache key
#proxy_cache_key "$http_authorization$cookie_nginxauth";

# As implemented in nginx-ldap-auth-daemon.py, the ldap-auth daemon
# communicates with an OpenLDAP server, passing in the following
# parameters to specify which user account to authenticate. To
# eliminate the need to modify the Python code, this file contains
# 'proxy_set_header' directives that set the values of the
# parameters. Set or change them as instructed in the comments.
#
#    Parameter      Proxy header
#    -----------    ----------------
#    basedn         X-Ldap-BaseDN
#    binddn         X-Ldap-BindDN
#    bindpasswd     X-Ldap-BindPass
#    cookiename     X-CookieName
#    realm          X-Ldap-Realm
#    template       X-Ldap-Template
#    url            X-Ldap-URL

# (Required) Set the URL and port for connecting to the LDAP server,
# by replacing 'example.com' and '636'.
    proxy_set_header X-Ldap-URL      "ldaps://ldap.slash16.local:636";

# (Required) Set the Base DN, by replacing the value enclosed in
# double quotes.
    proxy_set_header X-Ldap-BaseDN   "ou=people,dc=slash16,dc=local";

# (Required) Set the Bind DN, by replacing the value enclosed in
# double quotes.
    proxy_set_header X-Ldap-BindDN   "uid=saslauthd,ou=services,dc=slash16,dc=local";

# (Required) Set the Bind password, by replacing 'secret'.
    proxy_set_header X-Ldap-BindPass "saslauthd";

# (Required) The following directives set the cookie name and pass
# it, respectively. They are required for cookie-based
# authentication. Comment them out if using HTTP basic
# authentication.
    proxy_set_header X-CookieName "nginxauth";
    proxy_set_header Cookie nginxauth=$cookie_nginxauth;

# (Required if using Microsoft Active Directory as the LDAP server)
# Set the LDAP template by uncommenting the following directive.
#proxy_set_header X-Ldap-Template "(SAMAccountName=%(username)s)";

# (Optional if using OpenLDAP as the LDAP server) Set the LDAP
# template by uncommenting the following directive and replacing
# '(cn=%(username)s)' which is the default set in
# nginx-ldap-auth-daemon.py.
    proxy_set_header X-Ldap-Template "(&(objectClass=person)(uid=%(username)s))";

# (Optional) Set the realm name, by uncommenting the following
# directive and replacing 'Restricted' which is the default set
# in nginx-ldap-auth-daemon.py.
    #proxy_set_header X-Ldap-Realm    "Restricted";
  }


  location /sse/ {
    proxy_buffering off;
    proxy_pass http://localhost:8010/sse/;
  }
  location /buildbot/ws {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass http://localhost:5000/ws;
  # raise the proxy timeout for the websocket
    proxy_read_timeout 6000s;
  }
}



